<IfModule mod_ssl.c>

<VirtualHost *:443>
    # ALF_HOSTNAME is set in /etc/apache2/envvars and /opt/alfresco/scripts/tools/gethostnames.sh using $(hostname -f)
    PassEnv ALF_HOSTNAME
    ServerName ${ALF_HOSTNAME}

    Timeout 2400
    ProxyTimeout 2400
    ProxyBadHeader Ignore

    DocumentRoot /var/www

    ErrorLog ${APACHE_LOG_DIR}/${ALF_HOSTNAME}-error.log
    CustomLog ${APACHE_LOG_DIR}/${ALF_HOSTNAME}-ssl_request.log \
              "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b" 
    TransferLog ${APACHE_LOG_DIR}/${ALF_HOSTNAME}-access.log
    
    RewriteEngine On
	
    ErrorDocument 503 /503.html
	
	## Please comment out the following lines to enforce 
	## a maintenance page except for defined IPs
	#RewriteCond %{REMOTE_ADDR} !^193.168.22.
	#RewriteCond %{REQUEST_URI} !^/503.html$
	#Header always set Retry-After "3600"
	#RewriteRule .* - [R=503]
	
	
    SSLEngine on
    SSLProtocol all -SSLv2
    SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5

    #   A self-signed (snakeoil) certificate can be created by installing
    #   the ssl-cert package. See
    #   /usr/share/doc/apache2.2-common/README.Debian.gz for more info.
    #   If both key and certificate are stored in the same file, only the
    #   SSLCertificateFile directive is needed.
    SSLCertificateFile    /opt/alfresco/etc/ssl/certs/alf-appliance-http.crt
    SSLCertificateKeyFile /opt/alfresco/etc/ssl/private/alf-appliance-http.key
    SSLCertificateChainFile /opt/alfresco/etc/ssl/applianceCA/certs/rootCA.crt

    SSLProxyEngine Off
    ProxyRequests       Off
    ProxyPreserveHost On
    SetEnv HTTPS on 
		
    #RewriteCond %{HTTP_HOST} !${ALF_HOSTNAME}
    #RewriteRule ^.*$     https://${ALF_HOSTNAME}%{REQUEST_URI} [R]

    RewriteCond %{REQUEST_METHOD} !^OPTIONS|PROPFIND$
    RewriteRule ^/$ https://${ALF_HOSTNAME}/share/ [L,R]

    ProxyPass /share ajp://127.0.0.1:7009/share
    ProxyPass /alfresco ajp://127.0.0.1:7009/alfresco
    ProxyPassReverse /alfresco ajp://127.0.0.1:7009/alfresco

    # Support for Sharepoint protocol
    ProxyPass /spp http://localhost:7070/spp
    ProxyPass /_vti_bin/ http://localhost:7070/_vti_bin/
    ProxyPass /_vti_history/ http://localhost:7070/_vti_history/
    ProxyPassMatch ^/_vti_inf.html$ http://localhost:7070/_vti_inf.html
    ProxyPassMatch ^/$ http://localhost:7070
    # push protocol downstream to jetty proxy connector
    RequestHeader set X-Forwarded-Proto "https"	

    # webdav extra methods
	<LocationMatch "^/alfresco/webdav/.+$">
	    <Limit OPTIONS PROPFIND GET REPORT MKACTIVITY PROPPATCH PUT CHECKOUT MKCOL MOVE COPY DELETE LOCK UNLOCK MERGE>
		   Order Deny,Allow
		   Allow from all
		   # change this or add your own IP to allow webdav access
		   # Deny from all
		   # Allow from 234.234.234.234
		   # Allow from 127.0.0.1
			Satisfy Any
	    </Limit>	   
	</LocationMatch>

	
	<Proxy *>
	  AddDefaultCharset off
	  Order allow,deny
	  Allow from all
	</Proxy>

	<LocationMatch "^/alfresco/?$">
	   Order Deny,Allow
	   Allow from all
	</LocationMatch>
	<LocationMatch "^/alfresco/(css|css-boilerplate|favicon.ico|images|index.jsp|scripts|swf|yui|images|faces|uploadFileServlet|upload|d|dr|(ajax/invoke/NavigatorPluginBean.(retrieveChildren|nodeCollapsed))).*$">
	   Order Deny,Allow
	   Allow from all
	</LocationMatch>

	<Location /share>
	   Order Deny,Allow
	   Allow from all
	</Location>

	BrowserMatch "MSIE [2-6]" \
	nokeepalive ssl-unclean-shutdown \
	downgrade-1.0 force-response-1.0
	
	# MSIE 7 and newer should be able to use keepalive
	BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown
</VirtualHost>           
</IfModule>

